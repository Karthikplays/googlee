
1. Create an application that takes the name from a text box and shows hello message along with the name entered in the text box, when the user clicks the OK button.
MainAcitivity.java
package com.example.test;

import android.os.Bundle; import android.view.View;
import android.widget.Button;
import android.widget.EditText; import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity; public class MainActivity extends AppCompatActivity {
EditText nameEditText; Button okButton; TextView helloTextView; @Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

nameEditText = findViewById(R.id.nameEditText); okButton = findViewById(R.id.okButton);
helloTextView = findViewById(R.id.helloTextView)
okButton.setOnClickListener(new View.OnClickListener() { @Override
public void onClick(View v) {
String enteredName = nameEditText.getText().toString().trim(); if (!enteredName.isEmpty()) {
helloTextView.setText("Hello, " + enteredName + "!");
} else {
helloTextView.setText("Please enter your name.");
}
}
});
}
}
activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
android:layout_height="match_parent" android:padding="24dp"
android:orientation="vertical">

<EditText
android:id="@+id/nameEditText" android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Enter your name"
android:inputType="textPersonName" />

<Button
android:id="@+id/okButton"

android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="OK"
android:layout_marginTop="16dp" />

<TextView
android:id="@+id/helloTextView" android:layout_width="match_parent" android:layout_height="wrap_content" android:text=""
android:textSize="18sp" android:textStyle="bold"
android:layout_marginTop="24dp" />
</LinearLayout>

Ouput:

2. Create a screen that has input boxes for User Name, Password, Address, Gender (radio buttons for male and female), Age (numeric), Date of Birth (Datepicker), State (Spinner) and a Submit button. On click- ing the submit button, print all the data below the Submit Button.


Activity_main.xml

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
android:layout_height="match_parent" android:padding="16dp">

<!-- Heading -->
<TextView
android:id="@+id/headingText" android:layout_width="wrap_content"
android:layout_height="wrap_content" android:text="Registration Form" android:textSize="24sp"
android:layout_centerHorizontal="true" android:layout_marginBottom="16dp" />

<!-- Name -->
<EditText
android:id="@+id/editTextText"
android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Name"
android:layout_below="@id/headingText" android:layout_marginTop="16dp" />

<!-- Password -->
<EditText
android:id="@+id/editTextTextPassword" android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Password"
android:layout_below="@id/editTextText" android:layout_marginTop="12dp"
android:inputType="textPassword" />

<!-- Address -->
<EditText
android:id="@+id/editTextTextMultiLine" android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Address"
android:layout_below="@id/editTextTextPassword" android:layout_marginTop="12dp" />

<!-- Gender -->
<RadioGroup
android:id="@+id/radioGroup"
android:layout_width="wrap_content" android:layout_height="wrap_content"
android:layout_below="@id/editTextTextMultiLine" android:layout_marginTop="12dp"

android:orientation="horizontal">

<RadioButton
android:id="@+id/radioButtonMale" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Male" />

<RadioButton
android:id="@+id/radioButtonFemale" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Female" />
</RadioGroup>

<!-- Age -->
<EditText
android:id="@+id/editTextNumber" android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Age"
android:layout_below="@id/radioGroup" android:layout_marginTop="12dp" android:inputType="number" />

<!-- Date of Birth -->
<EditText
android:id="@+id/editTextDate2" android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="DOB (dd/mm/yyyy)"
android:layout_below="@id/editTextNumber" android:layout_marginTop="12dp"
android:inputType="date" />

<!-- State Spinner -->
<Spinner
android:id="@+id/spinner"
android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_below="@id/editTextDate2" android:layout_marginTop="12dp" />

<!-- Submit Button -->
<Button
android:id="@+id/button"
android:layout_width="match_parent" android:layout_height="wrap_content" android:text="Submit"
android:layout_below="@id/spinner" android:layout_marginTop="16dp" />

<!-- Output TextView -->
<TextView
android:id="@+id/text"
android:layout_width="match_parent" android:layout_height="wrap_content" android:textColor="#000000"

android:textSize="16sp"
android:layout_below="@id/button" android:layout_marginTop="16dp" />

</RelativeLayout>
MainActivity.java
package com.example.regform;

import android.os.Bundle; import android.view.View; import android.widget.*;
import androidx.appcompat.app.AppCompatActivity; public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

EditText nameEt = findViewById(R.id.editTextText);
EditText passEt = findViewById(R.id.editTextTextPassword); EditText addrEt = findViewById(R.id.editTextTextMultiLine); EditText ageEt = findViewById(R.id.editTextNumber);
EditText dobEt = findViewById(R.id.editTextDate2); Spinner stateSpinner = findViewById(R.id.spinner);
RadioGroup genderGroup = findViewById(R.id.radioGroup); Button submitBtn = findViewById(R.id.button);
TextView outputTv = findViewById(R.id.text);

String[] states = {"Telangana", "Andhra Pradesh", "Tamil Nadu"};
ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, states); adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
stateSpinner.setAdapter(adapter);

submitBtn.setOnClickListener(v -> {
String name = nameEt.getText().toString(); String pass = passEt.getText().toString(); String addr = addrEt.getText().toString(); String age = ageEt.getText().toString(); String dob = dobEt.getText().toString();
String state = stateSpinner.getSelectedItem().toString();

int genderId = genderGroup.getCheckedRadioButtonId();
String gender = genderId != -1 ? ((RadioButton) findViewById(genderId)).getText().toString() : "Not selected";

String result = "Name: " + name + "\nPassword: " + pass + "\nAddress: " + addr + "\nGender: " + gender + "\nAge: " + age + "\nDOB: " + dob + "\nState: " + state;

outputTv.setText(result);
});
}
}

Output:




3. Create an Android application that contains a Button. When the user clicks the button, the app should open a specific website (e.g., https://www.google.com) using an implicit intent.

Activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent"
tools:context=".MainActivity">

<Button android:id="@+id/buttonGo"
android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Go" android:textSize="40sp" android:layout_centerInParent="true" android:fontFamily="monospace" />


</RelativeLayout>


Main Activity.java

package com.example.implicit_intent;
import androidx.appcompat.app.AppCompatActivity; import android.content.Intent;
import android.net.Uri; import android.os.Bundle; import android.widget.Button; import android.widget.Toast;

public class MainActivity extends AppCompatActivity { private Button buttonGo;
@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);

buttonGo = findViewById(R.id.buttonGo);

buttonGo.setOnClickListener(v -> {
Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.google.com")); startActivity(intent);
});	}
}

Ouput:

4. Create an app with two activities.Add a button in each to navigate to the other using explicit intent.
Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.an- droid.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:id="@+id/main" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity">

<TextView android:id="@+id/textView"
android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="First Activity" android:textSize="40dp"
app:layout_constraintBottom_toTopOf="@+id/button" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toTopOf="parent" />

<Button
android:id="@+id/button" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginBottom="280dp" android:text="Go to 2nd Activity" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintHorizontal_bias="0.54" app:layout_constraintStart_toStartOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout> Activity2.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.an- droid.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:id="@+id/main" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".Activity2">


<Button
android:id="@+id/button2" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginBottom="288dp" android:text="Go to previous Activity" app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintHorizontal_bias="0.563" app:layout_constraintStart_toStartOf="parent" />

<TextView android:id="@+id/textView3" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginTop="100dp" android:text="Second Activity" android:textSize="40dp"
app:layout_constraintBottom_toTopOf="@+id/button2" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintHorizontal_bias="0.578" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toTopOf="parent" app:layout_constraintVertical_bias="0.344" />
</androidx.constraintlayout.widget.ConstraintLayout>

MainActivity.java
package com.example.explicit_intent;
import androidx.appcompat.app.AppCompatActivity; import android.content.Intent;
import android.os.Bundle;
import android.view.View; import android.widget.Button;
public class MainActivity extends AppCompatActivity { @Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);

Button b = findViewById(R.id.button); b.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Intent i = new Intent(MainActivity.this, Activity2.class); startActivity(i);
}
});
}

}
Activity2.java
package com.example.explicit_intent;
import androidx.appcompat.app.AppCompatActivity; import android.content.Intent;
import android.os.Bundle; import android.view.View; import android.widget.Button;

import com.example.explicit_intent.R;
public class Activity2 extends AppCompatActivity { @Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_2);

Button b = findViewById(R.id.button2); b.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Intent i = new Intent(Activity2.this, MainActivity.class); startActivity(i);
}
});
}
}

Output:
	





5. Create two fragments, Fragment1 and Fragment2. Each should display a simple TextView with a different message.
Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent"
tools:context=".MainActivity">

<fragment android:id="@+id/frag1"
android:name="com.example.fragments.frag1" android:layout_width="0px" android:layout_height="match_parent" android:layout_weight="1" />
<fragment android:id="@+id/frag2"
android:name="com.example.fragments.frag2" android:layout_width="0px" android:layout_height="match_parent"

android:layout_weight="1" />
</LinearLayout> Fragment_frag1.xml
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent"
tools:context=".frag1">

<!-- Rectangle background -->
<View
android:layout_width="match_parent" android:layout_height="match_parent" android:background="#FFCDD2" /> <!-- Light Red -->

<!-- Label Text -->
<TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Fragment 1" android:textSize="24sp" android:textStyle="bold" android:layout_gravity="center" android:textColor="#000000"/>
</FrameLayout> Fragment_frag2.xml
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent"
tools:context=".frag2">

<!-- Rectangle background -->
<View
android:layout_width="match_parent" android:layout_height="match_parent" android:background="#BBDEFB" /> <!-- Light Blue -->

<!-- Label Text -->
<TextView

android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Fragment 2" android:textSize="24sp" android:textStyle="bold" android:layout_gravity="center" android:textColor="#000000"/>
</FrameLayout>
MainActivity.java
package com.example.fragments;

import androidx.appcompat.app.AppCompatActivity; import android.os.Bundle;
public class MainActivity extends AppCompatActivity {

@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);
}
}

frag1.java
package com.example.fragments; import android.os.Bundle;
import androidx.fragment.app.Fragment;

import android.view.LayoutInflater; import android.view.View;
import android.view.ViewGroup;

public class frag1 extends Fragment { @Override
public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);

}

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
// Inflate the layout for this fragment
return inflater.inflate(R.layout.fragment_frag1, container, false);
}
}

frag2.java
package com.example.fragments; import android.os.Bundle;
import androidx.fragment.app.Fragment;

import android.view.LayoutInflater; import android.view.View;
import android.view.ViewGroup; public class frag2 extends Fragment {
@Override
public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);
}

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
// Inflate the layout for this fragment
return inflater.inflate(R.layout.fragment_frag2, container, false);
}
}

Ouput:


5. Create an application using LinearLayout, RelativeLayout, or GridLayout to display a few basic UI ele- ments like TextView, EditText, and Button.

MainActivity.java
package com.example.relativelayout;

import android.os.Bundle; import android.widget.Button; import android.widget.EditText; import android.widget.TextView; import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity; public class MainActivity extends AppCompatActivity {
Button buttonSubmit, relativeButton;

@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);

buttonSubmit = findViewById(R.id.buttonSubmit); relativeButton = findViewById(R.id.relativeButton);

buttonSubmit.setOnClickListener(v -> {
Toast.makeText(this, "Linear button clicked", Toast.LENGTH_SHORT).show();
});

relativeButton.setOnClickListener(v -> {
Toast.makeText(this, "Relative Button Clicked", Toast.LENGTH_SHORT).show();
});
}
}
Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent"
android:orientation="vertical" android:padding="16dp">

<!-- TextView -->
<TextView android:id="@+id/textViewTitle" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="This is linear layout" android:textSize="18sp" android:layout_marginBottom="10dp" />

<!-- Button -->
<Button
android:id="@+id/buttonSubmit" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Linear button" android:layout_marginBottom="20dp" />

<!-- RelativeLayout Section -->
<RelativeLayout android:layout_width="match_parent" android:layout_height="wrap_content" android:padding="10dp" android:background="#f0f0f0">

<TextView android:id="@+id/relativeText" android:layout_width="wrap_content" android:layout_height="wrap_content"
android:text="This is inside RelativeLayout" android:textSize="16sp" android:layout_centerHorizontal="true" />

<Button
android:id="@+id/relativeButton" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Relative Button" android:layout_below="@id/relativeText" android:layout_centerHorizontal="true" android:layout_marginTop="10dp" />
</RelativeLayout>

</LinearLayout>

Output:

7. Create an Android app using a Broadcast Receiver to show a toast message saying "Please charge your phone" when the battery level drops to 20%.
activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/an- droid"
xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:id="@+id/main" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity">

<TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Hello!"
app:layout_constraintBottom_toBottomOf="parent" app:layout_constraintEnd_toEndOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>


MainActivity.java

package com.example.broad_receiver;

import android.content.Intent; import android.content.IntentFilter; import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity { BatteryReceiver batteryReceiver = new BatteryReceiver();

@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);

registerReceiver(batteryReceiver, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
}

@Override
protected void onDestroy() { super.onDestroy(); unregisterReceiver(batteryReceiver);
}
}

AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools">
<uses-permission android:name="android.permission.BATTERY_STATS" tools:ignore="ProtectedPermissions" />\
<application android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules" android:fullBackupContent="@xml/backup_rules" android:icon="@mipmap/ic_launcher" android:label="@string/app_name" android:roundIcon="@mipmap/ic_launcher_round" android:supportsRtl="true" android:theme="@style/Theme.Broad_receiver" tools:targetApi="31">
<activity android:name=".MainActivity" android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />

<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>
</activity>
</application>

</manifest>

BatteryReceiver.java

package com.example.broad_receiver;

import android.content.BroadcastReceiver; import android.content.Context;
import android.content.Intent; import android.os.BatteryManager; import android.widget.Toast;

public class BatteryReceiver extends BroadcastReceiver { @Override
public void onReceive(Context context, Intent intent) {
int level = intent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1); if (level <= 20) {
Toast.makeText(context, "Please charge your phone", Toast.LENGTH_LONG).show();
}
}
}

Output:



8. Create an Android app that uses Shared Preferences to save and retrieve user login details like username and password.
MainActivity.java:
package com.example.shared_pre;

import android.content.SharedPreferences; import android.os.Bundle;
import android.view.View; import android.widget.EditText; import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity { EditText username, password;
SharedPreferences prefs;

@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);
username = findViewById(R.id.user); password = findViewById(R.id.pass);
prefs = getSharedPreferences("userDetails", MODE_PRIVATE);
}

public void save(View view) { SharedPreferences.Editor editor = prefs.edit();
editor.putString("uname", username.getText().toString()); editor.putString("pwd", password.getText().toString()); editor.apply();
Toast.makeText(this, "Saved!", Toast.LENGTH_SHORT).show();
}

public void retrieve(View view) {
String u = prefs.getString("uname", "No name"); String p = prefs.getString("pwd", "No password");
Toast.makeText(this, "Username: " + u + "\nPassword: " + p, Toast.LENGTH_LONG).show();
}
}

activity_main.xml

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:orientation="vertical"
android:layout_width="match_parent" android:layout_height="match_parent" android:padding="20dp">

<EditText android:id="@+id/user"
android:layout_width="match_parent" android:layout_height="127dp" android:hint="Username" />

<EditText android:id="@+id/pass"
android:layout_width="match_parent" android:layout_height="153dp" android:hint="Password" android:inputType="textPassword" />

<Button android:onClick="save" android:text="Save" android:layout_width="match_parent" android:layout_height="wrap_content"/>

<Button android:onClick="retrieve" android:text="Retrieve" android:layout_width="match_parent" android:layout_height="wrap_content"/>
</LinearLayout>


OUTPUT:

9. Create an Android app that uses SQLite to save name and age, and shows the saved data on button click.
activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent"
android:orientation="vertical" android:padding="16dp">

<EditText android:id="@+id/editName"
android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Enter Name" android:minHeight="48dp" />

<EditText android:id="@+id/editAge"
android:layout_width="match_parent" android:layout_height="wrap_content" android:hint="Enter Age" android:inputType="number" android:minHeight="48dp" />

<Button android:id="@+id/btnSave"
android:layout_width="match_parent" android:layout_height="wrap_content" android:text="Save Data" />

<Button android:id="@+id/btnShow"
android:layout_width="match_parent" android:layout_height="wrap_content" android:text="Show Data" />

<TextView android:id="@+id/textViewData" android:layout_width="match_parent" android:layout_height="wrap_content" android:text=""

android:textSize="18sp" android:paddingTop="10dp" />
</LinearLayout> MainActivity.java
package com.example.sqlite;
import android.content.ContentValues; import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase; import android.os.Bundle;
import android.widget.*;
import androidx.appcompat.app.AppCompatActivity; public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);

EditText editName = findViewById(R.id.editName); EditText editAge = findViewById(R.id.editAge); Button btnSave = findViewById(R.id.btnSave); Button btnShow = findViewById(R.id.btnShow);
TextView textViewData = findViewById(R.id.textViewData);

// Create or open database
SQLiteDatabase db = openOrCreateDatabase("MyDB", MODE_PRIVATE, null);
    db.execSQL("CREATE TABLE IF NOT EXISTS users(id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, age INTEGER)");

btnSave.setOnClickListener(v -> {
String name = editName.getText().toString(); String ageStr = editAge.getText().toString();

int age = Integer.parseInt(ageStr); ContentValues values = new ContentValues(); values.put("name", name);
values.put("age", age);

db.insert("users", null, values);
Toast.makeText(this, "Saved data", Toast.LENGTH_SHORT).show();

});

btnShow.setOnClickListener(v -> {
Cursor cursor = db.rawQuery("SELECT * FROM users", null); String data = "";
while (cursor.moveToNext()) {
data += "ID: " + cursor.getInt(0) + "\n";
data += "Name: " + cursor.getString(1) + "\n"; data += "Age: " + cursor.getInt(2) + "\n\n";




});
}
}

}
textViewData.setText(data); cursor.close();


Ouput:


10. Create an Android app to display toast messages
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
android:layout_height="match_parent" android:orientation="vertical" android:padding="16dp">

<EditText
android:id="@+id/Name"
android:layout_width="match_parent" android:layout_height="121dp" android:hint="give name"
android:inputType="text" />

<EditText
android:id="@+id/Roll"
android:layout_width="match_parent" android:layout_height="92dp" android:hint="rollno"
android:inputType="number" />

<Button
android:id="@+id/submitButton" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="toast" />
</LinearLayout>
MainActivity.java
package com.example.toast;

import android.os.Bundle; import android.view.View; import android.widget.*;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity { @Override
protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

EditText name = findViewById(R.id.Name); EditText rno = findViewById(R.id.Roll);
Button submit = findViewById(R.id.submitButton);


submit.setOnClickListener(v -> {
String n = name.getText().toString(); String r = rno.getText().toString();
Toast.makeText(this, "Name: " + n + "\nRoll No: " + r, Toast.LENGTH_LONG).show();
});
}
}


Ouput:
























